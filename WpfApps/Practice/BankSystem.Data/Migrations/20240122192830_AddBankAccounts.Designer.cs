// <auto-generated />
using System;
using BankSystem.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankSystem.Data.Migrations
{
    [DbContext(typeof(ClientsDbContext))]
    [Migration("20240122192830_AddBankAccounts")]
    partial class AddBankAccounts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("BankSystem.Data.Entities.BankAccountGeneral", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientWithGeneralAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Money")
                        .HasColumnType("TEXT");

                    b.HasKey("Number");

                    b.HasIndex("ClientWithGeneralAccountId")
                        .IsUnique();

                    b.ToTable("BankAccountsGeneral", (string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("BankSystem.Data.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("_lastChangeBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("_lastChangeData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("_lastChangeDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("_lastChangeTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("_passport")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("_patronymic")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("_phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("_surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("BankSystem.Data.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("BankSystem.Data.Entities.BankAccountDeposit", b =>
                {
                    b.HasBaseType("BankSystem.Data.Entities.BankAccountGeneral");

                    b.Property<int>("ClientWithDepositAccountId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ClientWithDepositAccountId")
                        .IsUnique();

                    b.ToTable("BankAccountsDeposit", (string)null);
                });

            modelBuilder.Entity("BankSystem.Data.Entities.BankAccountGeneral", b =>
                {
                    b.HasOne("BankSystem.Data.Entities.Client", "ClientWithGeneralAccount")
                        .WithOne("BankAccountGeneral")
                        .HasForeignKey("BankSystem.Data.Entities.BankAccountGeneral", "ClientWithGeneralAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientWithGeneralAccount");
                });

            modelBuilder.Entity("BankSystem.Data.Entities.Client", b =>
                {
                    b.HasOne("BankSystem.Data.Entities.Department", "Department")
                        .WithMany("Clients")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("BankSystem.Data.Entities.BankAccountDeposit", b =>
                {
                    b.HasOne("BankSystem.Data.Entities.Client", "ClientWithDepositAccount")
                        .WithOne("BankAccountDeposit")
                        .HasForeignKey("BankSystem.Data.Entities.BankAccountDeposit", "ClientWithDepositAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientWithDepositAccount");
                });

            modelBuilder.Entity("BankSystem.Data.Entities.Client", b =>
                {
                    b.Navigation("BankAccountDeposit");

                    b.Navigation("BankAccountGeneral");
                });

            modelBuilder.Entity("BankSystem.Data.Entities.Department", b =>
                {
                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
